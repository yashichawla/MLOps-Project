services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 10

  airflow-init:
    image: apache/airflow:2.9.3-python3.12
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__LOGGING__BASE_LOG_FOLDER: /opt/airflow/logs
      AIRFLOW__SCHEDULER__child_process_log_directory: /opt/airflow/logs/scheduler
      PYTHONPATH: /opt/airflow/app   # <â€” import your repo without editable install
    volumes:
      - ./dags:/opt/airflow/dags
      - ./:/opt/airflow/app
      - ./airflow_artifacts/logs:/opt/airflow/logs
    working_dir: /opt/airflow/app
    command: >
      bash -lc "pip install --no-cache-dir --upgrade pip setuptools wheel &&
                pip install --no-cache-dir -r requirements-docker.txt || true &&
                airflow db migrate &&
                airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin || true"

  webserver:
    image: apache/airflow:2.9.3-python3.12
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__LOGGING__BASE_LOG_FOLDER: /opt/airflow/logs
      AIRFLOW__SCHEDULER__child_process_log_directory: /opt/airflow/logs/scheduler
      PYTHONPATH: /opt/airflow/app
    volumes:
      - ./dags:/opt/airflow/dags
      - ./:/opt/airflow/app
      - ./airflow_artifacts/logs:/opt/airflow/logs
    working_dir: /opt/airflow/app
    command: >
      bash -lc "pip install --no-cache-dir --upgrade pip setuptools wheel &&
                pip install --no-cache-dir -r requirements-docker.txt || true &&
                airflow webserver --port 8080"
    ports:
      - "8080:8080"

  scheduler:
    image: apache/airflow:2.9.3-python3.12
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__LOGGING__BASE_LOG_FOLDER: /opt/airflow/logs
      AIRFLOW__SCHEDULER__child_process_log_directory: /opt/airflow/logs/scheduler
      PYTHONPATH: /opt/airflow/app
    volumes:
      - ./dags:/opt/airflow/dags
      - ./:/opt/airflow/app
      - ./airflow_artifacts/logs:/opt/airflow/logs
    working_dir: /opt/airflow/app
    command: >
      bash -lc "pip install --no-cache-dir --upgrade pip setuptools wheel &&
                pip install --no-cache-dir -r requirements-docker.txt || true &&
                airflow scheduler"

volumes:
  pgdata: